export const categories = [
  {
    name: 'Storage & Databases',
    owner: 'Nik Aiyer',
    username: '@NikAiyer',
    keywords: ['Storage', 'Databases', 'Vector Databases', 'Database', 'Vector DB', 'Persistence'],
    assignWhen: 'Issue mentions storage, databases, or data persistence',
  },
  {
    name: 'Runtime Context',
    owner: 'Ehindero Israel',
    username: '@TheIsrael1',
    keywords: ['Runtime Context', 'Context', 'Runtime'],
    assignWhen: 'Issue mentions runtime context or execution context',
  },
  {
    name: 'Mastra Server',
    owner: 'Ward Peeters',
    username: '@wardpeet',
    keywords: ['Hono', 'Mastra Server', 'API Server'],
    assignWhen: 'Issue mentions server functionality or API endpoints',
  },
  {
    name: 'Telemetry & Logging',
    owner: 'Yujohn Nattrass',
    username: '@YujohnNattrass',
    keywords: ['Telemetry', 'Logging', 'Logs', 'Metrics', 'Monitoring'],
    assignWhen: 'Issue mentions telemetry, logging, or monitoring',
  },
  {
    name: 'Cloudflare & Deployment',
    owner: 'Ward Peeters',
    username: '@wardpeet',
    keywords: ['Cloudflare', 'Cloudflare Workers', 'Deployment', 'Deploy'],
    assignWhen: 'Issue mentions Cloudflare or deployment processes',
  },
  {
    name: 'AGUI / CopilotKit',
    owner: 'Abhiram Aiyer',
    username: '@abhiaiyer91',
    keywords: ['AGUI', 'CopilotKit', 'UI Components', 'React Components'],
    assignWhen: 'Issue mentions AGUI or CopilotKit integration',
  },
  {
    name: 'Agents',
    owner: 'Ward Peeters',
    username: '@wardpeet',
    keywords: ['Agents', 'Agent', 'AI Agent'],
    assignWhen: 'Issue mentions agent functionality (but not Agent Network)',
  },
  {
    name: 'Agent Network',
    owner: 'Tony Kovanen',
    username: '@rase-',
    keywords: ['Agent Network', 'Network', 'Multi-agent', 'Agent Communication'],
    assignWhen: 'Issue mentions agent networking or multi-agent systems',
  },
  {
    name: 'Guardrails & I/O Processing',
    owner: 'Ward Peeters',
    username: '@wardpeet',
    keywords: ['Guardrails', 'Input Output', 'I/O', 'Processing', 'Validation'],
    assignWhen: 'Issue mentions input/output processing or guardrails',
  },
  {
    name: 'A2A Protocol',
    owner: 'Ward Peeters',
    username: '@wardpeet',
    keywords: ['A2A', 'Agent to Agent', 'Protocol'],
    assignWhen: 'Issue mentions A2A protocol specifically',
  },
  {
    name: 'Tools & MCP',
    owner: 'Daniel Lew',
    username: '@DanielSLew',
    keywords: ['Tools', 'MCP', 'Model Context Protocol', 'Tool Integration'],
    assignWhen: 'Issue mentions tools or MCP functionality',
  },
  {
    name: 'Workflows',
    owner: 'Tony Kovanen',
    username: '@rase-',
    keywords: ['Workflows', 'Steps', 'Suspend', 'Resume', 'Workflow Streaming'],
    assignWhen: 'Issue mentions workflow functionality, steps, or workflow management',
  },
  {
    name: 'UI / Dev Playground',
    owner: 'Marvin Frachet',
    username: '@mfrachet',
    keywords: ['UI', 'Dev Playground', 'Playground', 'User Interface', 'Frontend'],
    assignWhen: 'Issue mentions UI components or development playground',
  },
  {
    name: 'Local Development',
    owner: 'Ehindero Israel',
    username: '@TheIsrael1',
    keywords: ['Local Dev', 'Local Development', 'Development Environment', 'Dev Setup'],
    assignWhen: 'Issue mentions local development setup or environment',
  },
  {
    name: 'Memory',
    owner: 'Tyler Barnes',
    username: '@TylerBarnes',
    keywords: ['Memory', 'Memory Management', 'Conversation Memory'],
    assignWhen: 'Issue mentions memory functionality or conversation history',
  },
  {
    name: 'RAG (Retrieval Augmented Generation)',
    owner: 'Nik Aiyer',
    username: '@NikAiyer',
    keywords: ['RAG', 'Retrieval', 'Augmented Generation', 'Vector Search'],
    assignWhen: 'Issue mentions RAG or retrieval-based functionality',
  },
  {
    name: 'Voice & Speech',
    owner: 'Ryan Hansen',
    username: '@rphansen91',
    keywords: ['Voice', 'Speech to Speech', 'Speech to Text', 'Text to Speech', 'Audio'],
    assignWhen: 'Issue mentions voice or speech functionality',
  },
  {
    name: 'Documentation',
    owner: 'Paul Scanlon',
    username: '@PaulieScanlon',
    keywords: ['Documentation', 'Docs', 'README', 'API Docs'],
    assignWhen: 'Issue mentions general documentation (not chatbot or website)',
  },
  {
    name: 'Documentation Chatbot',
    owner: 'Ifedayo',
    username: '@adeniyii',
    keywords: ['Documentation Chatbot', 'Doc Bot', 'Chatbot'],
    assignWhen: 'Issue mentions documentation chatbot specifically',
  },
  {
    name: 'Documentation Website & Website',
    owner: 'Kehinde Adeleke',
    username: '@adeleke5140',
    keywords: ['Documentation Website', 'Website', 'Site', 'Web'],
    assignWhen: 'Issue mentions website or documentation site',
  },
  {
    name: 'Mastra Cloud',
    owner: 'Yujohn Nattrass',
    username: '@YujohnNattrass',
    keywords: ['Mastra Cloud', 'Cloud', 'Cloud Platform'],
    assignWhen: 'Issue mentions Mastra Cloud platform',
  },
  {
    name: 'Authentication',
    owner: 'Ryan Hansen',
    username: '@rphansen91',
    keywords: ['Authentication', 'Auth', 'Authorization', 'Login', 'Logout'],
    assignWhen: 'Issue mentions authentication or authorization',
  },
];

// Login to Discord with your bot token
export const BOT_TOKEN = process.env.DISCORD_BOT_TOKEN;
